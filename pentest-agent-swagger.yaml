openapi: 3.1.0
info:
  title: GHOSTCREW Pentest Agent API
  version: 0.1.0
  description: Comprehensive AI-powered penetration testing agent with MCP integration, automated workflows, knowledge base, and reporting capabilities
  contact:
    name: GHOSTCREW Support
    url: https://github.com/MrFkry/PentestAgent
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.ghostcrew.pentest
    description: GitHub MCP Server (Production)
  - url: http://127.0.0.1:8000
    description: Local Development Server

tags:
  - name: Pentest Agent
    description: Core penetration testing agent operations
  - name: Workflows
    description: Automated penetration testing workflows
  - name: Tools
    description: Security tool management and execution
  - name: Knowledge Base
    description: Security knowledge base and RAG operations
  - name: Reports
    description: Report generation and export
  - name: MCP Integration
    description: Model Context Protocol server management
  - name: BurpSuite
    description: BurpSuite Community headless integration

paths:
  /pentest/run:
    post:
      tags:
        - Pentest Agent
      summary: Execute a full penetration test
      description: Run a complete automated penetration test with phase-based execution
      operationId: runPentest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PentestRequest'
            example:
              goal: Identify and exploit vulnerabilities in the web application
              target: 192.168.1.100
              interactive: false
      responses:
        '200':
          description: Pentest execution started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /pentest/interactive:
    post:
      tags:
        - Pentest Agent
      summary: Execute interactive penetration test
      description: Run a penetration test with step-by-step user confirmation
      operationId: runInteractivePentest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PentestRequest'
      responses:
        '200':
          description: Interactive pentest session initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestResponse'

  /workflows:
    get:
      tags:
        - Workflows
      summary: List available workflows
      description: Retrieve all available automated penetration testing workflows
      operationId: listWorkflows
      responses:
        '200':
          description: List of workflows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'

  /workflows/{workflowId}/execute:
    post:
      tags:
        - Workflows
      summary: Execute specific workflow
      description: Run a predefined workflow against a target
      operationId: executeWorkflow
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
            enum:
              - reconnaissance
              - web_application
              - network_infrastructure
              - full_penetration_test
              - quick_scan
              - comprehensive_scan
          description: Workflow identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowExecutionRequest'
      responses:
        '200':
          description: Workflow execution results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResponse'

  /tools:
    get:
      tags:
        - Tools
      summary: List available security tools
      description: Get all configured and available penetration testing tools
      operationId: listTools
      responses:
        '200':
          description: List of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'

  /tools/{toolName}/execute:
    post:
      tags:
        - Tools
      summary: Execute a specific tool
      description: Run a security tool with specified parameters
      operationId: executeTool
      parameters:
        - name: toolName
          in: path
          required: true
          schema:
            type: string
            enum:
              - nmap
              - masscan
              - httpx
              - nuclei
              - gobuster
              - sqlmap
              - hydra
              - ffuf
              - alterx
              - amass
              - arjun
              - assetfinder
              - katana
              - waybackurls
              - sslscan
              - bloodhound
              - crackmapexec
              - responder
              - bettercap
              - burpsuite
          description: Tool name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolExecutionRequest'
      responses:
        '200':
          description: Tool execution results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolExecutionResponse'

  /knowledge-base/search:
    post:
      tags:
        - Knowledge Base
      summary: Search knowledge base
      description: Search security knowledge base for relevant information
      operationId: searchKnowledgeBase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeSearchResponse'

  /knowledge-base/exploits:
    get:
      tags:
        - Knowledge Base
      summary: List exploits database
      description: Retrieve available exploits from knowledge base
      operationId: listExploits
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Filter by exploit category
        - name: cve
          in: query
          schema:
            type: string
          description: Filter by CVE identifier
      responses:
        '200':
          description: List of exploits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exploit'

  /reports/generate:
    post:
      tags:
        - Reports
      summary: Generate penetration test report
      description: Create a comprehensive report from pentest findings
      operationId: generateReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerationRequest'
      responses:
        '200':
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'

  /reports/{reportId}:
    get:
      tags:
        - Reports
      summary: Retrieve report
      description: Get a specific penetration test report
      operationId: getReport
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
          description: Report identifier
      responses:
        '200':
          description: Report data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          $ref: '#/components/responses/NotFound'

  /mcp/servers:
    get:
      tags:
        - MCP Integration
      summary: List MCP servers
      description: Get all configured MCP servers and their status
      operationId: listMcpServers
      responses:
        '200':
          description: List of MCP servers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/McpServer'

  /mcp/servers/{serverName}/tools:
    get:
      tags:
        - MCP Integration
      summary: List MCP server tools
      description: Get tools provided by a specific MCP server
      operationId: listMcpServerTools
      parameters:
        - name: serverName
          in: path
          required: true
          schema:
            type: string
          description: MCP server name
      responses:
        '200':
          description: List of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /burpsuite/start:
    post:
      tags:
        - BurpSuite
      summary: Start BurpSuite headless
      description: Launch BurpSuite Community in headless mode
      operationId: startBurpSuite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BurpSuiteStartRequest'
      responses:
        '200':
          description: BurpSuite started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BurpSuiteResponse'

  /burpsuite/scan:
    post:
      tags:
        - BurpSuite
      summary: Execute BurpSuite scan
      description: Run automated scan using BurpSuite
      operationId: executeBurpSuiteScan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BurpSuiteScanRequest'
      responses:
        '200':
          description: Scan initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BurpSuiteScanResponse'

  /burpsuite/stop:
    post:
      tags:
        - BurpSuite
      summary: Stop BurpSuite
      description: Terminate BurpSuite headless instance
      operationId: stopBurpSuite
      responses:
        '200':
          description: BurpSuite stopped
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: stopped

components:
  schemas:
    PentestRequest:
      type: object
      required:
        - goal
        - target
      properties:
        goal:
          type: string
          description: High-level objective of the penetration test
          example: Identify and exploit vulnerabilities in the web application
        target:
          type: string
          description: Target IP address, domain, or network range
          example: 192.168.1.100
        interactive:
          type: boolean
          description: Enable step-by-step interactive mode
          default: false
        constraints:
          type: object
          properties:
            iteration_limit:
              type: integer
              description: Maximum iterations for agent mode
              default: 20
            notes:
              type: string
              description: Additional constraints or requirements

    PentestResponse:
      type: object
      properties:
        session_id:
          type: string
          description: Unique session identifier
        status:
          type: string
          enum:
            - initiated
            - running
            - completed
            - failed
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
        report_path:
          type: string
          description: Path to generated report

    Phase:
      type: object
      properties:
        name:
          type: string
          enum:
            - reconnaissance
            - enumeration
            - vulnerability_assessment
            - exploitation
            - post_exploitation
            - reporting
        status:
          type: string
          enum:
            - pending
            - in_progress
            - completed
            - failed
        findings:
          type: array
          items:
            $ref: '#/components/schemas/Finding'

    Finding:
      type: object
      properties:
        phase:
          type: string
        step:
          type: string
        tool:
          type: string
        output:
          type: string
        severity:
          type: string
          enum:
            - critical
            - high
            - medium
            - low
            - info
        timestamp:
          type: string
          format: date-time

    Workflow:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowStep'

    WorkflowStep:
      type: object
      properties:
        description:
          type: string
        command:
          type: string
        timeout:
          type: integer
          default: 300

    WorkflowExecutionRequest:
      type: object
      required:
        - target
      properties:
        target:
          type: string
          description: Target for workflow execution

    WorkflowExecutionResponse:
      type: object
      properties:
        workflow_id:
          type: string
        target:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/StepResult'
        total_time:
          type: number
          description: Total execution time in seconds

    StepResult:
      type: object
      properties:
        step:
          type: integer
        description:
          type: string
        command:
          type: string
        result:
          $ref: '#/components/schemas/ToolExecutionResponse'

    Tool:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        description:
          type: string
        phases:
          type: array
          items:
            type: string
        requires_sudo:
          type: boolean
        available:
          type: boolean
        commands:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    ToolExecutionRequest:
      type: object
      required:
        - command_type
        - target
      properties:
        command_type:
          type: string
          description: Type of command to execute
        target:
          type: string
          description: Target for tool execution
        custom_args:
          type: array
          items:
            type: string
          description: Additional custom arguments
        timeout:
          type: integer
          default: 300
          description: Execution timeout in seconds

    ToolExecutionResponse:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: number
        tool:
          type: string
        command_type:
          type: string
        target:
          type: string
        full_command:
          type: string
        status:
          type: string
          enum:
            - running
            - completed
            - failed
            - timeout
            - error
        return_code:
          type: integer
        stdout:
          type: string
        stderr:
          type: string
        success:
          type: boolean
        error:
          type: string

    KnowledgeSearchRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: Search query
        max_results:
          type: integer
          default: 5
          description: Maximum number of results
        category:
          type: string
          enum:
            - exploits
            - shellcodes
            - wordlists
            - tools
            - other

    KnowledgeSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              score:
                type: number
              metadata:
                type: object
                properties:
                  filename:
                    type: string
                  filepath:
                    type: string
                  extension:
                    type: string

    Exploit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cve:
          type: string
        category:
          type: string
        description:
          type: string
        severity:
          type: string
          enum:
            - critical
            - high
            - medium
            - low
        platform:
          type: string
        path:
          type: string

    ReportGenerationRequest:
      type: object
      required:
        - engagement_summary
      properties:
        engagement_summary:
          type: object
          properties:
            goal:
              type: string
            target:
              type: string
            start_time:
              type: number
            end_time:
              type: number
        format:
          type: string
          enum:
            - json
            - markdown
            - html
            - pdf
          default: json

    ReportResponse:
      type: object
      properties:
        report_id:
          type: string
        path:
          type: string
        format:
          type: string
        generated_at:
          type: string
          format: date-time

    Report:
      type: object
      properties:
        engagement_summary:
          type: object
        phases:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Finding'
        statistics:
          type: object
          properties:
            total_findings:
              type: integer
            severity_breakdown:
              type: object
              properties:
                critical:
                  type: integer
                high:
                  type: integer
                medium:
                  type: integer
                low:
                  type: integer
                info:
                  type: integer

    McpServer:
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        args:
          type: array
          items:
            type: string
        env:
          type: object
          additionalProperties:
            type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - error
        cache_tools_list:
          type: boolean

    BurpSuiteStartRequest:
      type: object
      properties:
        port:
          type: integer
          default: 8080
          description: Proxy port
        project_file:
          type: string
          description: Path to BurpSuite project file
        config_file:
          type: string
          description: Path to configuration JSON

    BurpSuiteResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - started
            - running
            - stopped
        pid:
          type: integer
          description: Process ID
        proxy_port:
          type: integer
        api_url:
          type: string

    BurpSuiteScanRequest:
      type: object
      required:
        - target
      properties:
        target:
          type: string
          description: Target URL to scan
        scan_type:
          type: string
          enum:
            - crawl
            - audit
            - crawl_and_audit
          default: crawl_and_audit
        scan_config:
          type: object
          description: Scan configuration options

    BurpSuiteScanResponse:
      type: object
      properties:
        scan_id:
          type: string
        target:
          type: string
        status:
          type: string
          enum:
            - queued
            - running
            - completed
            - failed
        progress:
          type: integer
          description: Scan progress percentage
        issues_found:
          type: integer

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    GitHubToken:
      type: apiKey
      in: header
      name: Authorization
      description: GitHub Personal Access Token

security:
  - ApiKeyAuth: []
  - BearerAuth: []
