# GHOSTCREW Pentest Agent - Production Environment Configuration

# =====================================================================
# AI Model Configuration
# =====================================================================

# Google Gemini API Key (REQUIRED)
GEMINI_API_KEY=your-gemini-api-key-here

# Model name to use (default: gemini-1.5-flash)
MODEL_NAME=gemini-1.5-flash

# Google Cloud Project ID (Optional - for Vertex AI)
GOOGLE_CLOUD_PROJECT=your-gcp-project-id

# =====================================================================
# GitHub Integration
# =====================================================================

# GitHub Personal Access Token for MCP integration
# Required for: private repos, API rate limits, releases
GITHUB_TOKEN=ghp_your-github-personal-access-token

# =====================================================================
# Application Configuration
# =====================================================================

# Results directory path
RESULTS_DIR=/var/lib/pentest-agent/results

# Knowledge base directory
KNOWLEDGE_BASE_PATH=/var/lib/pentest-agent/knowledge

# Reports output directory
REPORTS_PATH=/var/lib/pentest-agent/reports

# =====================================================================
# MCP Server Configuration
# =====================================================================

# MCP configuration file path
MCP_CONFIG_FILE=/etc/pentest-agent/mcp.json

# MCP session timeout (seconds)
MCP_SESSION_TIMEOUT=600

# Connection retry delay (seconds)
CONNECTION_RETRY_DELAY=10

# =====================================================================
# Security Configuration
# =====================================================================

# API authentication (if implementing REST API)
API_KEY=your-secure-api-key-here
API_SECRET=your-secure-api-secret-here

# JWT secret for token generation
JWT_SECRET=your-jwt-secret-key-here

# Allowed origins for CORS
ALLOWED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com

# =====================================================================
# Tool Configuration
# =====================================================================

# Maximum concurrent tool executions
MAX_CONCURRENT_TOOLS=5

# Default tool timeout (seconds)
DEFAULT_TOOL_TIMEOUT=300

# Enable sudo for privileged tools
ENABLE_SUDO_TOOLS=true

# =====================================================================
# BurpSuite Configuration
# =====================================================================

# BurpSuite JAR path
BURPSUITE_JAR=/opt/burpsuite/burpsuite_community_v2025.10.jar

# BurpSuite proxy port
BURPSUITE_PROXY_PORT=8080

# BurpSuite project directory
BURPSUITE_PROJECT_DIR=/var/lib/pentest-agent/burpsuite

# BurpSuite Java heap size (MB)
BURPSUITE_HEAP_SIZE=2048

# =====================================================================
# Logging Configuration
# =====================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=/var/log/pentest-agent/agent.log

# Enable JSON logging
JSON_LOGGING=true

# =====================================================================
# Performance Configuration
# =====================================================================

# Worker threads for async operations
WORKER_THREADS=10

# Maximum memory per tool (MB)
MAX_TOOL_MEMORY=512

# Enable result caching
ENABLE_RESULT_CACHE=true

# Cache TTL (seconds)
CACHE_TTL=3600

# =====================================================================
# Database Configuration (if using persistent storage)
# =====================================================================

# Database URL
# DATABASE_URL=postgresql://user:password@localhost:5432/pentest_agent

# Redis URL (for caching and job queue)
# REDIS_URL=redis://localhost:6379/0

# =====================================================================
# Notification Configuration
# =====================================================================

# Slack webhook for notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email configuration
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# NOTIFICATION_EMAIL=admin@yourdomain.com

# =====================================================================
# Feature Flags
# =====================================================================

# Enable interactive mode
ENABLE_INTERACTIVE_MODE=true

# Enable automated workflows
ENABLE_WORKFLOWS=true

# Enable knowledge base
ENABLE_KNOWLEDGE_BASE=true

# Enable AI planning
ENABLE_AI_PLANNING=true

# =====================================================================
# Rate Limiting
# =====================================================================

# Maximum requests per minute
MAX_REQUESTS_PER_MINUTE=60

# Maximum concurrent scans
MAX_CONCURRENT_SCANS=3

# =====================================================================
# Compliance & Audit
# =====================================================================

# Enable audit logging
ENABLE_AUDIT_LOG=true

# Audit log path
AUDIT_LOG_PATH=/var/log/pentest-agent/audit.log

# Retention days for results
RESULTS_RETENTION_DAYS=90

# Retention days for logs
LOG_RETENTION_DAYS=30

# =====================================================================
# Network Configuration
# =====================================================================

# API server host (if running as API server)
API_HOST=0.0.0.0

# API server port
API_PORT=8000

# Enable HTTPS
ENABLE_HTTPS=true

# SSL certificate path
# SSL_CERT_PATH=/etc/ssl/certs/pentest-agent.crt
# SSL_KEY_PATH=/etc/ssl/private/pentest-agent.key

# =====================================================================
# Docker Configuration
# =====================================================================

# Docker socket path
# DOCKER_SOCKET=/var/run/docker.sock

# Enable Docker isolation for tools
# ENABLE_DOCKER_ISOLATION=false

# =====================================================================
# Advanced Configuration
# =====================================================================

# Token limits for AI responses
MAX_TOTAL_TOKENS=8192
RESPONSE_BUFFER=4096

# Timezone
TZ=UTC

# Enable debug mode (DO NOT ENABLE IN PRODUCTION)
DEBUG=false
